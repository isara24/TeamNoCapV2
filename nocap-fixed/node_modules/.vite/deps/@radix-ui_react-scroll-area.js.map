{"version":3,"file":"@radix-ui_react-scroll-area.js","names":["Fragment"],"sources":["../../@radix-ui/number/dist/index.mjs","../../@radix-ui/react-scroll-area/dist/index.mjs"],"sourcesContent":["// packages/core/number/src/number.ts\nfunction clamp(value, [min, max]) {\n  return Math.min(max, Math.max(min, value));\n}\nexport {\n  clamp\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/scroll-area.tsx\nimport * as React2 from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\n\n// src/use-state-machine.ts\nimport * as React from \"react\";\nfunction useStateMachine(initialState, machine) {\n  return React.useReducer((state, event) => {\n    const nextState = machine[state][event];\n    return nextState ?? state;\n  }, initialState);\n}\n\n// src/scroll-area.tsx\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar SCROLL_AREA_NAME = \"ScrollArea\";\nvar [createScrollAreaContext, createScrollAreaScope] = createContextScope(SCROLL_AREA_NAME);\nvar [ScrollAreaProvider, useScrollAreaContext] = createScrollAreaContext(SCROLL_AREA_NAME);\nvar ScrollArea = React2.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeScrollArea,\n      type = \"hover\",\n      dir,\n      scrollHideDelay = 600,\n      ...scrollAreaProps\n    } = props;\n    const [scrollArea, setScrollArea] = React2.useState(null);\n    const [viewport, setViewport] = React2.useState(null);\n    const [content, setContent] = React2.useState(null);\n    const [scrollbarX, setScrollbarX] = React2.useState(null);\n    const [scrollbarY, setScrollbarY] = React2.useState(null);\n    const [cornerWidth, setCornerWidth] = React2.useState(0);\n    const [cornerHeight, setCornerHeight] = React2.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = React2.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = React2.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setScrollArea(node));\n    const direction = useDirection(dir);\n    return /* @__PURE__ */ jsx(\n      ScrollAreaProvider,\n      {\n        scope: __scopeScrollArea,\n        type,\n        dir: direction,\n        scrollHideDelay,\n        scrollArea,\n        viewport,\n        onViewportChange: setViewport,\n        content,\n        onContentChange: setContent,\n        scrollbarX,\n        onScrollbarXChange: setScrollbarX,\n        scrollbarXEnabled,\n        onScrollbarXEnabledChange: setScrollbarXEnabled,\n        scrollbarY,\n        onScrollbarYChange: setScrollbarY,\n        scrollbarYEnabled,\n        onScrollbarYEnabledChange: setScrollbarYEnabled,\n        onCornerWidthChange: setCornerWidth,\n        onCornerHeightChange: setCornerHeight,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            dir: direction,\n            ...scrollAreaProps,\n            ref: composedRefs,\n            style: {\n              position: \"relative\",\n              // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n              [\"--radix-scroll-area-corner-width\"]: cornerWidth + \"px\",\n              [\"--radix-scroll-area-corner-height\"]: cornerHeight + \"px\",\n              ...props.style\n            }\n          }\n        )\n      }\n    );\n  }\n);\nScrollArea.displayName = SCROLL_AREA_NAME;\nvar VIEWPORT_NAME = \"ScrollAreaViewport\";\nvar ScrollAreaViewport = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeScrollArea, children, nonce, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = React2.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\n        \"style\",\n        {\n          dangerouslySetInnerHTML: {\n            __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`\n          },\n          nonce\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          \"data-radix-scroll-area-viewport\": \"\",\n          ...viewportProps,\n          ref: composedRefs,\n          style: {\n            /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */\n            overflowX: context.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n            overflowY: context.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n            ...props.style\n          },\n          children: /* @__PURE__ */ jsx(\"div\", { ref: context.onContentChange, style: { minWidth: \"100%\", display: \"table\" }, children })\n        }\n      )\n    ] });\n  }\n);\nScrollAreaViewport.displayName = VIEWPORT_NAME;\nvar SCROLLBAR_NAME = \"ScrollAreaScrollbar\";\nvar ScrollAreaScrollbar = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === \"horizontal\";\n    React2.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n    return context.type === \"hover\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarHover, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"scroll\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarScroll, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"auto\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarAuto, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"always\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarVisible, { ...scrollbarProps, ref: forwardedRef }) : null;\n  }\n);\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\nvar ScrollAreaScrollbarHover = React2.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = React2.useState(false);\n  React2.useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener(\"pointerenter\", handlePointerEnter);\n      scrollArea.addEventListener(\"pointerleave\", handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener(\"pointerenter\", handlePointerEnter);\n        scrollArea.removeEventListener(\"pointerleave\", handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || visible, children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarAuto,\n    {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref: forwardedRef\n    }\n  ) });\n});\nvar ScrollAreaScrollbarScroll = React2.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const debounceScrollEnd = useDebounceCallback(() => send(\"SCROLL_END\"), 100);\n  const [state, send] = useStateMachine(\"hidden\", {\n    hidden: {\n      SCROLL: \"scrolling\"\n    },\n    scrolling: {\n      SCROLL_END: \"idle\",\n      POINTER_ENTER: \"interacting\"\n    },\n    interacting: {\n      SCROLL: \"interacting\",\n      POINTER_LEAVE: \"idle\"\n    },\n    idle: {\n      HIDE: \"hidden\",\n      SCROLL: \"scrolling\",\n      POINTER_ENTER: \"interacting\"\n    }\n  });\n  React2.useEffect(() => {\n    if (state === \"idle\") {\n      const hideTimer = window.setTimeout(() => send(\"HIDE\"), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n  React2.useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? \"scrollLeft\" : \"scrollTop\";\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send(\"SCROLL\");\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener(\"scroll\", handleScroll);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || state !== \"hidden\", children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarVisible,\n    {\n      \"data-state\": state === \"hidden\" ? \"hidden\" : \"visible\",\n      ...scrollbarProps,\n      ref: forwardedRef,\n      onPointerEnter: composeEventHandlers(props.onPointerEnter, () => send(\"POINTER_ENTER\")),\n      onPointerLeave: composeEventHandlers(props.onPointerLeave, () => send(\"POINTER_LEAVE\"))\n    }\n  ) });\n});\nvar ScrollAreaScrollbarAuto = React2.forwardRef((props, forwardedRef) => {\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = React2.useState(false);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || visible, children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarVisible,\n    {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref: forwardedRef\n    }\n  ) });\n});\nvar ScrollAreaScrollbarVisible = React2.forwardRef((props, forwardedRef) => {\n  const { orientation = \"vertical\", ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = React2.useRef(null);\n  const pointerOffsetRef = React2.useRef(0);\n  const [sizes, setSizes] = React2.useState({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 }\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n  const commonProps = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => thumbRef.current = thumb,\n    onThumbPointerUp: () => pointerOffsetRef.current = 0,\n    onThumbPointerDown: (pointerPos) => pointerOffsetRef.current = pointerPos\n  };\n  function getScrollPosition(pointerPos, dir) {\n    return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n  if (orientation === \"horizontal\") {\n    return /* @__PURE__ */ jsx(\n      ScrollAreaScrollbarX,\n      {\n        ...commonProps,\n        ref: forwardedRef,\n        onThumbPositionChange: () => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        },\n        onWheelScroll: (scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        },\n        onDragScroll: (pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n          }\n        }\n      }\n    );\n  }\n  if (orientation === \"vertical\") {\n    return /* @__PURE__ */ jsx(\n      ScrollAreaScrollbarY,\n      {\n        ...commonProps,\n        ref: forwardedRef,\n        onThumbPositionChange: () => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        },\n        onWheelScroll: (scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        },\n        onDragScroll: (pointerPos) => {\n          if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }\n      }\n    );\n  }\n  return null;\n});\nvar ScrollAreaScrollbarX = React2.forwardRef((props, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React2.useState();\n  const ref = React2.useRef(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n  React2.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarImpl,\n    {\n      \"data-orientation\": \"horizontal\",\n      ...scrollbarProps,\n      ref: composeRefs,\n      sizes,\n      style: {\n        bottom: 0,\n        left: context.dir === \"rtl\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        right: context.dir === \"ltr\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        [\"--radix-scroll-area-thumb-width\"]: getThumbSize(sizes) + \"px\",\n        ...props.style\n      },\n      onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.x),\n      onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.x),\n      onWheelScroll: (event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      },\n      onResize: () => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollWidth,\n            viewport: context.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight)\n            }\n          });\n        }\n      }\n    }\n  );\n});\nvar ScrollAreaScrollbarY = React2.forwardRef((props, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React2.useState();\n  const ref = React2.useRef(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n  React2.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarImpl,\n    {\n      \"data-orientation\": \"vertical\",\n      ...scrollbarProps,\n      ref: composeRefs,\n      sizes,\n      style: {\n        top: 0,\n        right: context.dir === \"ltr\" ? 0 : void 0,\n        left: context.dir === \"rtl\" ? 0 : void 0,\n        bottom: \"var(--radix-scroll-area-corner-height)\",\n        [\"--radix-scroll-area-thumb-height\"]: getThumbSize(sizes) + \"px\",\n        ...props.style\n      },\n      onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.y),\n      onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.y),\n      onWheelScroll: (event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      },\n      onResize: () => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom)\n            }\n          });\n        }\n      }\n    }\n  );\n});\nvar [ScrollbarProvider, useScrollbarContext] = createScrollAreaContext(SCROLLBAR_NAME);\nvar ScrollAreaScrollbarImpl = React2.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeScrollArea,\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = React2.useState(null);\n  const composeRefs = useComposedRefs(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React2.useRef(null);\n  const prevWebkitUserSelectRef = React2.useRef(\"\");\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n  function handleDragScroll(event) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  }\n  React2.useEffect(() => {\n    const handleWheel = (event) => {\n      const element = event.target;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener(\"wheel\", handleWheel, { passive: false });\n    return () => document.removeEventListener(\"wheel\", handleWheel, { passive: false });\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n  React2.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */ jsx(\n    ScrollbarProvider,\n    {\n      scope: __scopeScrollArea,\n      scrollbar,\n      hasThumb,\n      onThumbChange: useCallbackRef(onThumbChange),\n      onThumbPointerUp: useCallbackRef(onThumbPointerUp),\n      onThumbPositionChange: handleThumbPositionChange,\n      onThumbPointerDown: useCallbackRef(onThumbPointerDown),\n      children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          ...scrollbarProps,\n          ref: composeRefs,\n          style: { position: \"absolute\", ...scrollbarProps.style },\n          onPointerDown: composeEventHandlers(props.onPointerDown, (event) => {\n            const mainPointer = 0;\n            if (event.button === mainPointer) {\n              const element = event.target;\n              element.setPointerCapture(event.pointerId);\n              rectRef.current = scrollbar.getBoundingClientRect();\n              prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n              document.body.style.webkitUserSelect = \"none\";\n              if (context.viewport) context.viewport.style.scrollBehavior = \"auto\";\n              handleDragScroll(event);\n            }\n          }),\n          onPointerMove: composeEventHandlers(props.onPointerMove, handleDragScroll),\n          onPointerUp: composeEventHandlers(props.onPointerUp, (event) => {\n            const element = event.target;\n            if (element.hasPointerCapture(event.pointerId)) {\n              element.releasePointerCapture(event.pointerId);\n            }\n            document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n            if (context.viewport) context.viewport.style.scrollBehavior = \"\";\n            rectRef.current = null;\n          })\n        }\n      )\n    }\n  );\n});\nvar THUMB_NAME = \"ScrollAreaThumb\";\nvar ScrollAreaThumb = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || scrollbarContext.hasThumb, children: /* @__PURE__ */ jsx(ScrollAreaThumbImpl, { ref: forwardedRef, ...thumbProps }) });\n  }\n);\nvar ScrollAreaThumbImpl = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useComposedRefs(\n      forwardedRef,\n      (node) => scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = React2.useRef(void 0);\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = void 0;\n      }\n    }, 100);\n    React2.useEffect(() => {\n      const viewport = scrollAreaContext.viewport;\n      if (viewport) {\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener(\"scroll\", handleScroll);\n        return () => viewport.removeEventListener(\"scroll\", handleScroll);\n      }\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": scrollbarContext.hasThumb ? \"visible\" : \"hidden\",\n        ...thumbProps,\n        ref: composedRef,\n        style: {\n          width: \"var(--radix-scroll-area-thumb-width)\",\n          height: \"var(--radix-scroll-area-thumb-height)\",\n          ...style\n        },\n        onPointerDownCapture: composeEventHandlers(props.onPointerDownCapture, (event) => {\n          const thumb = event.target;\n          const thumbRect = thumb.getBoundingClientRect();\n          const x = event.clientX - thumbRect.left;\n          const y = event.clientY - thumbRect.top;\n          scrollbarContext.onThumbPointerDown({ x, y });\n        }),\n        onPointerUp: composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)\n      }\n    );\n  }\n);\nScrollAreaThumb.displayName = THUMB_NAME;\nvar CORNER_NAME = \"ScrollAreaCorner\";\nvar ScrollAreaCorner = React2.forwardRef(\n  (props, forwardedRef) => {\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== \"scroll\" && hasBothScrollbarsVisible;\n    return hasCorner ? /* @__PURE__ */ jsx(ScrollAreaCornerImpl, { ...props, ref: forwardedRef }) : null;\n  }\n);\nScrollAreaCorner.displayName = CORNER_NAME;\nvar ScrollAreaCornerImpl = React2.forwardRef((props, forwardedRef) => {\n  const { __scopeScrollArea, ...cornerProps } = props;\n  const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n  const [width, setWidth] = React2.useState(0);\n  const [height, setHeight] = React2.useState(0);\n  const hasSize = Boolean(width && height);\n  useResizeObserver(context.scrollbarX, () => {\n    const height2 = context.scrollbarX?.offsetHeight || 0;\n    context.onCornerHeightChange(height2);\n    setHeight(height2);\n  });\n  useResizeObserver(context.scrollbarY, () => {\n    const width2 = context.scrollbarY?.offsetWidth || 0;\n    context.onCornerWidthChange(width2);\n    setWidth(width2);\n  });\n  return hasSize ? /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      ...cornerProps,\n      ref: forwardedRef,\n      style: {\n        width,\n        height,\n        position: \"absolute\",\n        right: context.dir === \"ltr\" ? 0 : void 0,\n        left: context.dir === \"rtl\" ? 0 : void 0,\n        bottom: 0,\n        ...props.style\n      }\n    }\n  ) : null;\n});\nfunction toInt(value) {\n  return value ? parseInt(value, 10) : 0;\n}\nfunction getThumbRatio(viewportSize, contentSize) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\nfunction getThumbSize(sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  return Math.max(thumbSize, 18);\n}\nfunction getScrollPositionFromPointer(pointerPos, pointerOffset, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange);\n  return interpolate(pointerPos);\n}\nfunction getThumbOffsetFromScroll(scrollPos, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\nfunction linearScale(input, output) {\n  return (value) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\nfunction isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\nvar addUnlinkedScrollListener = (node, handler = () => {\n}) => {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\nfunction useDebounceCallback(callback, delay) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = React2.useRef(0);\n  React2.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return React2.useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\nfunction useResizeObserver(element, onResize) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\nvar Root = ScrollArea;\nvar Viewport = ScrollAreaViewport;\nvar Scrollbar = ScrollAreaScrollbar;\nvar Thumb = ScrollAreaThumb;\nvar Corner = ScrollAreaCorner;\nexport {\n  Corner,\n  Root,\n  ScrollArea,\n  ScrollAreaCorner,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaViewport,\n  Scrollbar,\n  Thumb,\n  Viewport,\n  createScrollAreaScope\n};\n//# sourceMappingURL=index.mjs.map\n"],"mappings":"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"}